name: Build and Release

# On merge or push to main
on:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write  # This ensures the GITHUB_TOKEN has write permissions to contents

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22
    - name: Build the binary
      run: go build -o dsync
    - name: Create a README with instructions
      run: |
        echo "# dsync Binary" > README.md
    - name: Archive binary and README
      run: zip dsync.zip dsync README.md
    - name: Get the latest tag name
      id: get_tag_name
      run: |
        TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        NEW_TAG=$(echo $TAG | awk -F. -v OFS=. '{$NF++;print}')
        echo "GIT_TAG=$NEW_TAG" >> $GITHUB_ENV
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.GIT_TAG }}
        release_name: Release ${{ env.GIT_TAG }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dsync.zip
        asset_name: dsync.zip
        asset_content_type: application/zip
